# Group Groups
Groups of collaborating users of the blogging platform.

A Group resource has the following attributes:

- **Id**: (int, required) Unique identifier
- **CreatedAt**: (datetime, required) The time of creation of the resource
- **UpdatedAt**: (datetime, required) The latest time of modification of the resource
- **Name**: (string, required) The name of the group 
- **Description**: (string, optional) A description of the group 
- **OwnerId**: (int, required) Identifier of the user who created the group and therefore owns it 

The attributes *Id*, *CreatedAt*, *UpdatedAt*, and *OwnerId* are set by the TrunkTrunk API.


## -> /groups [/groups]

### Create [POST]
Create a new group.

Any signed in user can create a group.

+ Request (application/json)

        {
          "Name": "Group 1 name",
          "Description": "Group 1 description",
          "OwnerId": "2"
        }

+ Response 201 (application/json)

        {
          "Id": 1,
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Name": "Group 1 name",
          "Description": "Group 1 description",
          "OwnerId": "2"
        }

### Update [PUT]
Update a group.

Any member of the group can update it.

+ Request (application/json)

        {
          "Id": 1,
          "Name": "New Group 1 name",
          "Description": "New Group 1 description",
        }

+ Response 201 (application/json)

        {
          "Id": 1,
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Name": "New Group 1 name",
          "Description": "New Group 1 description",
          "OwnerId": "2"
        }


## -> /groups/{id} [/groups/{id}]

+ Parameters
    + id (required, number, `1`) ... Id of the group.

### Get [GET]
Get the group with the given id.

Any user can do this request. The caller does not have to be signed in.

+ Response 200 (application/json)

        {
          "Id": 1,
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Name": "Group 1 name",
          "Description": "Group 1 description",
          "OwnerId": "2"
        }


## -> /groups/user/{id} [/groups/user/{id}]

+ Parameters
    + id (required, number, `1`) ... Id of the user.
    + items_per_page (required, number, `1`) ... How many groups to return per request.
    + page (required, number, `1`) ... How many *items_per_page* to skip.

### Get [GET]
Get a list of the groups where the user with the given id is member.

Any user can do this request. The caller does not have to be signed in.

+ Response 200 (application/json)

        [
            {
              "Id": 1,
              "CreatedAt": "2014-04-14T02:15:15Z", 
              "UpdatedAt": "2014-04-14T02:15:15Z", 
              "Name": "Group 1 name",
              "Description": "Group 1 description",
              "OwnerId": "1"
            },
            {
              "Id": 3,
              "CreatedAt": "2014-04-14T02:15:15Z", 
              "UpdatedAt": "2014-04-14T02:15:15Z", 
              "Name": "Group 3 name",
              "Description": "Group 3 description",
              "OwnerId": "1"
            }
        ]
