# Group Posts
Posts (articles) at the core of the blogging platform.

A Post resource has the following attributes:

- **Id**: (int, required) Unique identifier
- **Revision**: (int, required) Revision number unique for the post id
- **CreatedAt**: (datetime, required) The time of creation of the resource
- **UpdatedAt**: (datetime, required) The latest time of modification of the resource
- **Title**: (string, required) The post title
- **Content**: (string, required) The post content (the text of the article)
- **Tags**: (list of strings, required) List of unique post tags (strings) describing the post
- **ImageCaption**: (string, optional) The caption of the post image
- **Price**: (decimal, required) The price of the post. If set to 0.0, the post is free.
- **NewsquidProductId**: (int, optional) The integer of the product in NEWSQUID corresponding to the post, if such a product exists.
- **PublishedRevision**: (int, optional) The revision number of the post revision currently published. I set to 0, the post is not published.
- **GroupId**: (int, optional) The id of the group to which the post belong. If set to 0, the post is considered part of no group.

The attributes *Id*, *Revision*, *CreatedAt*, and *UpdatedAt* are set by the TrunkTrunk API.


## -> /posts [/posts]

### Create [POST]
Create a new post. The post is published immediately, if the
*PublishedRevision* attribute is set to 1. If this is not desired, the
*PublishedRevision* attribute must be set to 0.

Any signed in user can create a post.

+ Request (application/json)

        {
          "Title": "Post 1", 
          "Content": "Content of Post 1", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ]
          "ImageCaption": "Image caption of Post 1",
          "Price:": 0,
          "NewsquidProductId": 0,
          "GroupId": 0
        }

+ Response 201 (application/json)

        {
          "Id": 1, 
          "Revision": 1, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 1", 
          "Content": "Content of Post 1", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 1",
          "Price:": 0,
          "NewsquidProductId": 0,
          "PublishedRevision": 0,
          "GroupId": 0
        }

### Update [PUT]
Update a post. If the *PublishedRevision* attribute is set to the current
revision number + 1, the changes are published immediately. If working on a
draft, the *PublishedRevision* attribute must remain unchanged.

Only the creator of the post or any user in the group to which the post belongs can update a post.

+ Request (application/json)

        {
          "Id": 1, 
          "Revision": 1, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 1", 
          "Content": "Content of Post 1", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 1",
          "Price:": 0,
          "NewsquidProductId": 0,
          "PublishedRevision": 2,
          "GroupId": 0
        }

+ Response 201 (application/json)

        {
          "Id": 1, 
          "Revision": 2, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 1", 
          "Content": "Content of Post 1", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 1",
          "Price:": 0,
          "NewsquidProductId": 0,
          "PublishedRevision": 2,
          "GroupId": 0
        }



## -> /posts/{id} [/posts/{id}]

+ Parameters
    + id (required, number, `1`) ... Id of the Post.

### Get [GET]
Get the latest published version of the post with the given id.

Anyone can get a post by its id. It does not require that the caller is signed in.

+ Response 200 (application/json)

        {
          "Id": 1, 
          "Revision": 1, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 1", 
          "Content": "Content of Post 1", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 1",
          "Price:": 0,
          "NewsquidProductId": 0,
          "PublishedRevision": 1,
          "GroupId": 0
        }

### Delete [DELETE]
Delete the post with the given id.

Only the creator of the post or any user in the group to which the post belongs can delete a post.

+ Response 204


## -> /posts/{id}/draft [/posts/{id}/draft]

+ Parameters
    + id (required, number, `1`) ... Id of the Post.

### Get [GET]
Get the latest draft of the post with the given id.

Only the creator of the post or any user in the group to which the post belongs can get the latest draft of a post.

+ Response 200 (application/json)

        {
          "Id": 1, 
          "Revision": 5, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 1", 
          "Content": "Content of Post 1", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 1",
          "Price:": 0,
          "NewsquidProductId": 0,
          "PublishedRevision": 2,
          "GroupId": 0
        }


##  -> /posts/user/{id} [/posts/user/{id}]

+ Parameters
    + id (required, number, `1`) ... Id of the user.

### Get [GET]
Get all published posts of the user with the given id.

Anyone get do this request. It does not require that the caller is signed in.

+ Response 200 (application/json)

        [{
          "Id": 1, 
          "Revision": 3, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 1", 
          "Content": "Content of Post 1", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 1",
          "Price:": 0,
          "NewsquidProductId": 0,
          "PublishedRevision": 3,
          "GroupId": 2
        }, {
          "Id": 2, 
          "Revision": 2, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 2", 
          "Content": "Content of Post 2", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 2",
          "Price:": 1.1,
          "NewsquidProductId": 7,
          "PublishedRevision": 2,
          "GroupId": 7
        }]


## -> /posts/group/{id} [/posts/group/{id}]

+ Parameters
    + id (required, number, `1`) ... Id of the group.

### Get [GET]
Get all published posts of the group with the given id.

Anyone get do this request. It does not require that the caller is signed in.

+ Response 200 (application/json)

        [{
          "Id": 1, 
          "Revision": 3, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 1", 
          "Content": "Content of Post 1", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 1",
          "Price:": 0,
          "NewsquidProductId": 0,
          "PublishedRevision": 3,
          "GroupId": 0
        }, {
          "Id": 2, 
          "Revision": 2, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 2", 
          "Content": "Content of Post 2", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 1",
          "Price:": 2.2,
          "NewsquidProductId": 7,
          "PublishedRevision": 2,
          "GroupId": 4
        }]



## -> /posts/featured [/posts/featured]

### Get [GET]
Get all featured posts (the posts that appear on the front page of TrunkTrunk).

Anyone get do this request. It does not require that the caller is signed in.

+ Response 200 (application/json)

        [{
          "Id": 1, 
          "Revision": 3, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 1", 
          "Content": "Content of Post 1", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 1",
          "Price:": 0,
          "NewsquidProductId": 0,
          "PublishedRevision": 3,
          "GroupId": 0
        }, {
          "Id": 2, 
          "Revision": 2, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 2", 
          "Content": "Content of Post 2", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 1",
          "Price:": 3.1,
          "NewsquidProductId": 7,
          "PublishedRevision": 2,
          "GroupId": 0
        }]


## -> /posts{?search} [/posts{?search}]

+ Parameters
    + search (required, string) ... Search string. The terms with which to search.

### Search for posts [GET]
Retrieve all published posts matching the given search parameter (fuzzy
search).

+ Response 200 (application/json)

        [{
          "Id": 1, 
          "Revision": 3, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 1", 
          "Content": "Content of Post 1", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 1",
          "Price:": 0,
          "NewsquidProductId": 0,
          "PublishedRevision": 3,
          "GroupId": 3
        }, {
          "Id": 2, 
          "Revision": 2, 
          "CreatedAt": "2014-04-14T02:15:15Z", 
          "UpdatedAt": "2014-04-14T02:15:15Z", 
          "Title": "Post 2", 
          "Content": "Content of Post 2", 
          "Tags" [
            "Tag 1", "Tag 2", "Tag 3"
          ],
          "ImageCaption": "Image caption of Post 2",
          "Price:": 0.1,
          "NewsquidProductId": 7,
          "PublishedRevision": 2,
          "GroupId": 0
        }]
